{"version":3,"file":"tour2.mjs","sources":["../../../../../../packages/components/tour/src/tour.vue"],"sourcesContent":["<template>\n  <teleport :to=\"appendTo\">\n    <div :class=\"kls\" v-bind=\"$attrs\">\n      <el-tour-mask\n        :visible=\"mergedShowMask\"\n        :fill=\"mergedMaskStyle?.color\"\n        :style=\"mergedMaskStyle?.style\"\n        :pos=\"pos\"\n        :z-index=\"mergedZIndex\"\n        :target-area-clickable=\"targetAreaClickable\"\n      />\n      <el-tour-content\n        v-if=\"modelValue\"\n        :key=\"current\"\n        :reference=\"triggerTarget\"\n        :placement=\"mergedPlacement\"\n        :show-arrow=\"mergedShowArrow\"\n        :z-index=\"mergedZIndex\"\n        :style=\"mergedContentStyle\"\n        @close=\"onEscClose\"\n      >\n        <el-tour-steps :current=\"current\" @update-steps=\"onUpdateSteps\">\n          <slot />\n        </el-tour-steps>\n      </el-tour-content>\n    </div>\n  </teleport>\n  <!-- just for IDE -->\n  <slot v-if=\"false\" name=\"indicators\" :current=\"current + 1\" :total=\"total\" />\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, ref, toRef, useSlots, watch } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { useNamespace, useZIndex } from '@element-plus/hooks'\nimport { isBoolean } from '@element-plus/utils'\nimport ElTourMask from './mask.vue'\nimport ElTourContent from './content.vue'\nimport ElTourSteps from './steps'\nimport { tourEmits, tourProps } from './tour'\nimport { tourKey, useTarget } from './helper'\nimport type { UsedTourStepProps } from './types'\n\ndefineOptions({\n  name: 'ElTour',\n})\n\nconst props = defineProps(tourProps)\nconst emit = defineEmits(tourEmits)\n\nconst ns = useNamespace('tour')\nconst steps = ref<UsedTourStepProps[]>([])\n\nconst current = useVModel(props, 'current', emit, {\n  passive: true,\n})\nconst total = computed(() => steps.value.length)\n\nconst currentStep = computed(() => steps.value[current.value] || {})\nconst currentTarget = computed(() => currentStep.value.target)\n\nconst kls = computed(() => [\n  ns.b(),\n  mergedType.value === 'primary' ? ns.m('primary') : '',\n])\n\nconst mergedPlacement = computed(\n  () => currentStep.value.placement || props.placement\n)\n\nconst mergedContentStyle = computed(\n  () => currentStep.value.contentStyle ?? props.contentStyle\n)\n\nconst mergedMask = computed(() => currentStep.value.mask ?? props.mask)\nconst mergedShowMask = computed(() => !!mergedMask.value && props.modelValue)\nconst mergedMaskStyle = computed(() =>\n  isBoolean(mergedMask.value) ? undefined : mergedMask.value\n)\n\nconst mergedShowArrow = computed(\n  () =>\n    !!currentTarget.value && (currentStep.value.showArrow ?? props.showArrow)\n)\n\nconst mergedScrollIntoViewOptions = computed(\n  () => currentStep.value.scrollIntoViewOptions ?? props.scrollIntoViewOptions\n)\nconst mergedType = computed(() => currentStep.value.type ?? props.type)\n\nconst { nextZIndex } = useZIndex()\nconst nowZIndex = nextZIndex()\nconst mergedZIndex = computed(() => props.zIndex ?? nowZIndex)\n\nconst { mergedPosInfo: pos, triggerTarget } = useTarget(\n  currentTarget,\n  toRef(props, 'modelValue'),\n  toRef(props, 'gap'),\n  mergedMask,\n  mergedScrollIntoViewOptions\n)\n\nwatch(\n  () => props.modelValue,\n  (val) => {\n    if (!val) {\n      current.value = 0\n    }\n  }\n)\n\nconst onUpdateSteps = (v: any) => {\n  steps.value = v\n}\n\nconst onEscClose = () => {\n  if (props.closeOnPressEscape) {\n    emit('update:modelValue', false)\n    emit('close', current.value)\n  }\n}\n\nconst slots = useSlots()\n\nprovide(tourKey, {\n  current,\n  total,\n  showClose: toRef(props, 'showClose'),\n  closeIcon: toRef(props, 'closeIcon') as any,\n  mergedType: mergedType as any,\n  ns,\n  slots,\n  updateModelValue(modelValue) {\n    emit('update:modelValue', modelValue)\n  },\n  onClose() {\n    emit('close', current.value)\n  },\n  onFinish() {\n    emit('finish')\n  },\n  onChange() {\n    emit('change', current.value)\n  },\n})\n</script>\n"],"names":[],"mappings":"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"}